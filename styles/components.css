/**
 * Components CSS
 * 
 * This file contains styling for all reusable UI components in the application.
 * It defines the visual appearance, layout, and interactive states for elements
 * such as commands, buttons, inputs, and other interface components.
 */

/**
 * COMMANDS COMPONENT STYLES
 * 
 * The commands component displays shortcut keys in a responsive grid layout
 * that adapts from 2 to 4 columns based on the viewport width.
 * Optimized for desktop use with a minimum width.
 */
.commands {
  border-radius: var(--border-radius);
  column-gap: 0;
  columns: 2; /* Start with 2 columns by default */
  list-style: none;
  margin: 0 auto;
  max-width: 25rem;
  min-width: 20rem; /* Set minimum width for desktop */
  overflow: hidden;
  padding: 0;
  width: 100%; /* Use percentage instead of viewport width */
  max-height: 80vh; /* Ensure it doesn't exceed viewport height */
}

/* Large screens: 4 columns of commands */
@media (min-width: 900px) {
  .commands {
    columns: 4;
    max-width: 45rem;
  }
}

/**
 * COMMAND ITEM STYLES
 * 
 * Individual command items display a keyboard shortcut and its associated name.
 * They feature interactive hover and focus states for better user feedback.
 */
.command {
  display: flex;
  gap: var(--space);
  outline: 0;
  padding: var(--space);
  position: relative;
  text-decoration: none;
  transition: background 0.2s ease;
}

/* Hover state for command items */
.command:hover {
  background: var(--hover-color);
}

/* 
 * Subtle visual effect for command items
 * Adds a faint background layer that becomes more visible on hover/focus
 */
.command::after {
  background: var(--color-text-subtle);
  content: " ";
  inset: 1px;
  opacity: 0.05;
  position: absolute;
  transition: opacity var(--transition-speed);
}

/* Increase opacity of the effect on hover/focus */
.command:where(:focus, :hover)::after {
  opacity: 0.1;
}

/**
 * COMMAND COMPONENTS
 * 
 * Each command has two parts: a key (shortcut) and a name (description).
 * These are styled differently to distinguish between them.
 */

/* The keyboard shortcut key */
.key {
  color: var(--color-text);
  display: inline-block;
  text-align: center;
  width: 3ch; /* Fixed width for alignment */
}

/* The command name/description */
.name {
  color: var(--color-text-subtle);
  transition: color var(--transition-speed);
}

/* Highlight the name on hover/focus for better readability */
.command:where(:focus, :hover) .name {
  color: var(--color-text);
}

/**
 * TOOLTIP STYLES
 * 
 * CSS-only tooltips that appear on hover for interactive elements.
 * Tooltips are positioned relative to their parent element and use
 * the data-tooltip attribute for content.
 */
[data-tooltip] {
  position: relative;
}

[data-tooltip]::after {
  content: attr(data-tooltip);
  position: absolute;
  background-color: var(--color-background);
  color: var(--color-text);
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 14px;
  white-space: nowrap;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.2s ease, visibility 0.2s ease;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  z-index: 100;
  border: 1px solid var(--color-text-subtle);
}

[data-tooltip]:hover::after {
  opacity: 1;
  visibility: visible;
}

/* Top tooltip (for buttons at the bottom of the screen) */
[data-tooltip].tooltip-top::after {
  bottom: 100%;
  left: 50%;
  transform: translateX(-50%) translateY(-8px);
}

/* Bottom tooltip (for buttons at the top of the screen) */
[data-tooltip].tooltip-bottom::after {
  top: 100%;
  left: 50%;
  transform: translateX(-50%) translateY(8px);
}

/* Right tooltip */
[data-tooltip].tooltip-right::after {
  left: 100%;
  top: 50%;
  transform: translateY(-50%) translateX(8px);
}

/* Left tooltip (for buttons with tooltips on their left side) */
[data-tooltip].tooltip-left::after {
  right: 100%;
  top: 50%;
  transform: translateY(-50%) translateX(-8px);
}

/**
 * SETTINGS BUTTON
 * 
 * The settings button opens the settings modal when clicked.
 * It's fixed at the top-right corner of the viewport for easy access.
 */
.settings-button {
  position: fixed;
  top: 10px;
  right: 10px;
  width: 50px;
  height: 50px;
  background-color: var(--background-color);
  color: #ffffff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease, color 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Icon inside the settings button */
.settings-button i {
  color: var(--color-text-subtle);
  transition: color 0.3s ease;
}

.settings-button:hover {
  background-color: var(--hover-color);
}

.settings-button:hover i {
  color: var(--color-text);
}

.dynamic-button {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 2rem;
  border: none;
  background-color: var(--plus-button-color);
  color: var(--plus-icon-color);
  cursor: pointer;
  transition: all 0.3s ease;
  margin: 1px;
  padding: var(--space);
  border-radius: 0; /* Remove border radius */
  width: 100%;
  height: auto;
  min-width: 80px; /* Set minimum width for desktop */
  min-height: 0; /* Allow height to be controlled by JS */
  box-sizing: border-box;
}

.dynamic-button:hover {
  background-color: var(--hover-color);
  color: var(--color-text);
}

/* Search Component */
input,
button {
  background: transparent;
  border: 0;
  display: block;
  outline: 0;
}

.dialog {
  align-items: center;
  background: var(--color-background);
  border: none;
  display: none;
  flex-direction: column;
  height: 100%;
  justify-content: center;
  left: 0;
  padding: 0;
  top: 0;
  width: 100%;
}

.dialog[open] {
  display: flex;
}

.form {
  width: 100%;
}

.input {
  color: var(--color-text);
  font-size: 3rem;
  font-weight: var(--font-weight-bold);
  padding: 0;
  text-align: center;
  width: 100%;
}

.suggestions {
  align-items: center;
  display: flex;
  flex-direction: row; /* Default to row layout for desktop */
  flex-wrap: wrap;
  justify-content: center;
  list-style: none;
  margin: var(--space) 0 0;
  overflow: hidden;
  padding: 0;
}

.suggestion {
  color: var(--color-text);
  cursor: pointer;
  font-size: 1rem;
  padding: var(--space);
  position: relative;
  transition: color var(--transition-speed);
  white-space: nowrap;
  z-index: 1;
}

.suggestion:where(:focus, :hover) {
  color: var(--color-background);
}

.suggestion::before {
  background-color: var(--color-text);
  border-radius: calc(var(--border-radius) / 5);
  content: " ";
  inset: calc(var(--space) / 1.5) calc(var(--space) / 3);
  opacity: 0;
  position: absolute;
  transform: translateY(0.5em);
  transition: all var(--transition-speed);
  z-index: -1;
}

.suggestion:where(:focus, :hover)::before {
  opacity: 1;
  transform: translateY(0);
}

.match {
  color: var(--color-text-subtle);
  transition: color var(--transition-speed);
}

.suggestion:where(:focus, :hover) .match {
  color: var(--color-background);
}

/* Footer */
.footer-container {
  position: absolute;
  bottom: 16px; /* Reset to a specific value instead of var(--space) */
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 16px;
  color: var(--color-text-subtle);
  padding: 8px 16px;
  border-radius: 4px;
  min-width: 120px; /* Reduced from 200px to make the button narrower */
}

.footer-text {
  margin: 0;
  padding: 0;
}

.footer-container:hover {
  background-color: var(--hover-color);
  color: var(--color-text);
  transition: background-color 0.2s ease, color 0.2s ease;
}

/* Help Button */
.help-button {
  position: fixed;
  top: 70px; /* Positioned just below the settings button (10px + 50px + 10px spacing) */
  right: 10px; /* Aligned with the settings button */
  width: 50px;
  height: 50px;
  background-color: var(--background-color);
  color: #ffffff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease, color 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
}

.help-button i {
  color: var(--color-text-subtle);
  transition: color 0.3s ease;
  font-size: 20px;
}

.help-button:hover {
  background-color: var(--hover-color);
}

.help-button:hover i {
  color: var(--color-text);
}
.fa-sliders {
  font-size: 20px;
}
