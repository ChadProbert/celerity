/**
 * Modal CSS
 * 
 * This file contains all styles related to modals and dialogs in the application.
 * It defines the overlay, containers, content areas, buttons, and interactive
 * elements used in the settings modal, help modal, and confirmation dialogs.
 */

/**
 * MODAL OVERLAY
 * 
 * The semi-transparent background that appears behind modals.
 * Covers the entire viewport and helps focus attention on the modal content.
 */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0);
  z-index: 1000;
  display: none;
}

/**
 * ACTIVE MODAL OVERLAY
 * 
 * When a modal is open, the overlay becomes visible with a subtle
 * transparency to slightly dim the content underneath.
 */
.modal-overlay.active {
  display: block;
}

/**
 * MODAL DIALOG CONTAINER
 * 
 * Fixed-position container that centers the modal content in the viewport.
 * Uses flexbox for perfect centering both horizontally and vertically.
 */
.custom-modal {
  display: none; /* Hidden by default */
  position: fixed;
  z-index: 1000;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: var(--modal-background-color);
  justify-content: center; /* Center content horizontally */
  align-items: center; /* Center content vertically */
}

/**
 * MODAL CONTENT
 * 
 * The visible container that holds the modal's content.
 * Has a distinctive background, border, and padding to separate it from the overlay.
 */
.modal-content {
  background-color: var(--color-background);
  color: var(--color-text);
  border-radius: var(--border-radius);
  max-width: 80%;
  width: 70%;
  min-width: 600px; /* Set minimum width for desktop displays */
  position: relative;
  text-align: center;
  border: 1px solid var(--confirm-border-color);
  padding: 20px;
}

/**
 * CLOSE BUTTON
 * 
 * "Ã—" button in the top-right corner of modal content that closes the modal.
 * Features hover effects for better user feedback.
 */
.close-button {
  position: absolute;
  top: 10px;
  right: 15px;
  font-size: 24px;
  color: var(--color-text-subtle);
  cursor: pointer;
  transition: color 0.3s ease;
}

.close-button:hover {
  color: var(--color-text);
}

.theme-section,
.shortcut-section {
  margin: 10px 0;
  text-align: left;
}

/**
 * RESET BUTTON
 * 
 * Button that resets all settings to their default values.
 * Features a warning hover state to indicate destructive action.
 */
.reset-button {
  background-color: var(--accent-color);
  color: var(--color-text);
  border: none;
  padding: 10px 20px;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.3s ease;
  display: inline-flex;
  align-items: center;
  gap: 8px;
  font-size: 14px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  margin-top: 10px;
}

/* Warning hover effect for reset button */
.reset-button:hover {
  background-color: var(--hover-color); /* Red warning color */
  color: var(--color-text);
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
}

/* Icon inside reset button */
.reset-button i {
  font-size: 14px;
}

/**
 * FORM LABELS
 * 
 * Labels for form elements within modals.
 * Uses bold text for better visual hierarchy.
 */
label {
  display: block;
  margin-bottom: 5px;
  font-weight: bold;
  color: var(--color-text);
}

/**
 * CUSTOM SELECT DROPDOWN
 * 
 * Styled select dropdown for theme selection and other options.
 * Includes custom styling for the dropdown arrow and hover/focus states.
 */

/* Container for the custom select to position the arrow */
.custom-select-wrapper {
  position: relative;
  display: block;
  width: 100%;
  margin-top: 10px;
}

.custom-select {
  width: 100%;
  padding: 8px 30px 8px 10px;
  background-color: var(--input-color);
  color: var(--color-text);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  position: relative;
  transition: all 0.2s ease;
  cursor: pointer;
}

.custom-select:focus {
  border-color: var(--color-text);
  box-shadow: 0 0 0 1px var(--color-text);
  outline: none;
}

.custom-select:hover {
  background-color: var(--hover-color);
}

.custom-arrow {
  position: absolute;
  font-size: 12px;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  color: var(--color-text-subtle);
  transition: color 0.2s ease;
}

.custom-select:focus + .custom-arrow,
.custom-select:hover + .custom-arrow {
  color: var(--color-text);
}

/* Form Elements */
.key-input,
.name-input,
.value-input {
  padding: 8px;
  background-color: var(--input-color);
  color: var(--color-text);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  transition: all 0.2s ease;
}

/* Focus styles for input fields */
.key-input:focus,
.name-input:focus,
.value-input:focus {
  border-color: var(--color-text);
  box-shadow: 0 0 0 1px var(--color-text);
  outline: none;
}

/* Special focus styles for the new shortcut input fields */
.shortcut-item:last-child .key-input:focus,
.shortcut-item:last-child .name-input:focus,
.shortcut-item:last-child .value-input:focus {
  border-color: var(--color-text);
  box-shadow: 0 0 0 1px var(--color-text);
}

.key-input {
  width: 5%;
}

.name-input {
  width: 14%;
}

.value-input {
  flex: 1;
}

/* Plus button styles */
.add-button {
  background-color: var(--accent-color);
  color: var(--color-text);
  border: none;
  padding: 8px;
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 30px;
  height: 30px;
}

.add-button:hover {
  background-color: var(--hover-color);
}

.fa-plus {
  font-size: 15px;
  color: var(--plus-icon-color);
  transition: color 0.3s ease;
}

.add-button:hover .fa-plus {
  color: var(--color-text);
}

/* Shortcut List */
.shortcut-list {
  background-color: transparent;
  border: none;
  padding-right: 10px;
}

.shortcut-item {
  display: flex;
  gap: 10px;
  align-items: center;
  margin-bottom: 5px;
}

.shortcut-item .key-input {
  width: 5%;
}

.shortcut-item .value-input {
  width: 5%;
}

/**
 * SCROLLABLE MODAL
 * 
 * When a modal has a lot of content, it becomes scrollable while
 * maintaining a reasonable maximum height. This ensures the modal
 * doesn't exceed the viewport height when resizing the window.
 * 
 * The scrollbar is hidden for a cleaner interface.
 */
.modal-content.scrollable {
  max-height: 80vh;
  min-height: 400px; /* Minimum height for desktop */
  overflow-y: auto;
  scrollbar-width: none; /* Hide scrollbar */
  padding-right: 20px; /* Padding to prevent content from touching the edge */
  scroll-behavior: smooth; /* Smooth scrolling */
}

/* Hide scrollbar in WebKit browsers (Chrome, Safari, Edge) */
.modal-content.scrollable::-webkit-scrollbar {
  display: none;
}

/* Apply the same styles to help modal content when scrollable */
.help-modal-content.scrollable {
  max-height: 80vh;
  overflow-y: auto;
  scrollbar-width: none;
  scroll-behavior: smooth;
}

.help-modal-content.scrollable::-webkit-scrollbar {
  display: none;
}

/**
 * CONFIRMATION MODAL
 * 
 * A smaller, focused modal for confirming user actions like deletion or reset.
 * Features a simple layout with a message and two buttons (cancel/confirm).
 */
.confirm-modal {
  display: none; /* Hidden by default */
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--modal-background-color);
  justify-content: center;
  align-items: center;
  z-index: 2000;
}

.confirm-modal-content {
  background: var(--color-background);
  padding: 25px 25px;
  border-radius: 8px;
  border: 1px solid var(--confirm-border-color);
  text-align: center;
  max-width: 380px;
  min-width: 300px; /* Set minimum width for desktop */
  width: 90%;
  transition: border-color 0.3s ease, background 0.3s ease;
}

.confirm-message {
  font-size: 15px;
  margin-bottom: 25px;
  color: var(--color-text);
}

.confirm-buttons {
  display: flex;
  justify-content: center;
  gap: 15px;
}

.confirm-buttons button {
  padding: 8px 16px;
  border: none;
  border-radius: 4px;
  font-size: 14px;
  cursor: pointer;
  transition: background-color 0.2s ease, transform 0.2s ease,
    box-shadow 0.2s ease;
}

.confirm-cancel {
  background: var(--input-color);
  color: var(--color-text-subtle);
  font-weight: bold;
}

.confirm-cancel:hover {
  background: var(--hover-color);
  color: var(--color-text);
}

.confirm-ok {
  background: var(--accent-color);
  color: var(--color-text);
  font-weight: bold;
}

.confirm-ok:hover {
  background: var(--hover-color);
  color: var(--color-text);
}

/* Warning state for confirm button */
.confirm-ok.confirm-warning {
  background: #ff3b30;
  color: white;
}

.confirm-ok.confirm-warning:hover {
  background: #ff1f1f;
  color: white;
}

/* Override state for confirm button */
.confirm-ok.confirm-override {
  background: #ff9800; /* Sunset yellow/orange */
  color: #333;
  font-weight: 600;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.confirm-ok.confirm-override:hover {
  background: #ffa726; /* Slightly lighter sunset yellow on hover */
  color: #222;
  transform: translateY(-1px);
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
}

/* Action buttons for shortcuts */
.edit-button,
.delete-button,
.save-button {
  width: 30px;
  height: 30px;
  border: none;
  border-radius: 4px;
  background-color: var(--accent-color);
  color: var(--color-text-subtle);
  cursor: pointer;
  margin-left: 5px;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: all 0.2s ease;
}

.edit-button:hover,
.delete-button:hover {
  background-color: var(--hover-color);
  color: var(--color-text);
}

.save-button {
  background-color: #34c759;
  color: white;
}

/* Input style toggle for editing */
.shortcut-item input[readonly] {
  background-color: transparent;
  border-color: transparent;
  cursor: default;
}

.shortcut-item input:not([readonly]) {
  background-color: var(--input-color);
  border-color: var(--border-color);
}

/* Help Modal */
.help-modal {
  display: none; /* Hidden by default */
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--modal-background-color);
  justify-content: center;
  align-items: center;
  z-index: 2000;
}

/**
 * HELP MODAL CONTENT
 * 
 * Special styling for the help documentation inside the modal.
 */
.help-modal-content {
  background: var(--color-background);
  padding: 40px;
  border-radius: var(--border-radius);
  border: 1px solid var(--confirm-border-color);
  text-align: left;
  max-width: 70%; /* Reduced from original width */
  width: 70%;
  min-width: 500px;
  max-height: 80vh; /* Limit height to 80% of viewport height */
  overflow-y: auto; /* Add scrolling for overflow content */
  transition: border-color 0.3s ease, background 0.3s ease;
  box-sizing: border-box;
  position: relative;
}

.help-modal-content .close-button {
  position: absolute;
  top: 20px;
  right: 25px;
  font-size: 24px;
  color: var(--color-text-subtle);
  cursor: pointer;
  transition: all 0.3s ease;
  width: 36px;
  height: 36px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  background-color: transparent;
}

.help-modal-content .close-button:hover {
  color: var(--color-text);
}

.help-modal-content h2 {
  font-size: 28px;
  margin-top: 0;
  margin-bottom: 30px;
  color: var(--color-text);
  font-weight: var(--font-weight-bold);
  position: relative;
  padding-bottom: 12px;
}

.help-modal-content h2::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  height: 3px;
  width: 60px;
  background-color: var(--color-text-subtle);
}

.help-section {
  padding-right: 15px;
}

.help-section h3 {
  display: flex;
  align-items: center;
  margin-top: 32px;
  margin-bottom: 18px;
  color: var(--color-text);
  font-weight: var(--font-weight-bold);
  font-size: 1.3em;
}

.help-section h4 {
  margin-top: 22px;
  margin-bottom: 12px;
  color: var(--color-text);
  font-weight: var(--font-weight-normal);
  font-size: 1.15em;
  position: relative;
  padding-left: 16px;
}

.help-section h4::before {
  content: "";
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  height: 12px;
  width: 3px;
  background-color: var(--color-text-subtle);
  border-radius: 3px;
}

.help-section p {
  margin-bottom: 15px;
  line-height: 1.6;
  color: var(--color-text-subtle);
}

.help-section ul,
.help-section ol {
  margin-bottom: 20px;
  line-height: 1.6;
  padding-left: 20px;
  color: var(--color-text-subtle);
}

.help-section li {
  margin-bottom: 10px;
  position: relative;
}

.help-section li strong {
  color: var(--color-text);
}

.help-section a {
  color: var(--color-text);
  text-decoration: none;
  position: relative;
  transition: all 0.2s ease;
  border-bottom: 1px dotted var(--color-text-subtle);
}

.help-section a:hover {
  border-bottom: 1px solid var(--color-text);
}

.help-section code {
  background-color: var(--code-bg-color);
  padding: 3px 6px;
  border-radius: 4px;
  font-family: monospace;
  font-size: 0.9em;
  color: var(--code-text-color);
  border: 1px solid var(--code-border-color);
  display: inline-block;
  margin: 2px 0;
}

.help-section strong {
  color: var(--color-text);
  font-weight: var(--font-weight-bold);
}

.help-section .feature-box {
  background-color: rgba(255, 0, 0, 0.03);
  border-radius: 8px;
  padding: 20px;
  margin-bottom: 20px;
  border-left: 3px solid var(--color-text-subtle);
  box-shadow: none;
}

.feature-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  margin-right: 12px;
  color: var(--color-text);
  background-color: rgba(255, 255, 255, 0.05);
  border-radius: 50%;
  font-size: 0.8em;
}

.help-card {
  background-color: var(--help-card-bg-color);
  border-radius: 8px;
  padding: 18px;
  margin-bottom: 20px;
  transition: all 0.3s ease;
  border: 1px solid rgba(255, 255, 255, 0.03);
}

.help-card:hover {
  background-color: var(--hover-color);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.help-card h4 {
  margin-top: 0;
  padding-left: 0;
}

.help-card h4::before {
  display: none;
}

.help-card p:last-child {
  margin-bottom: 0;
}

.shortcut-example {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

.shortcut-key {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background-color: var(--code-bg-color);
  color: var(--code-text-color);
  border-radius: 6px;
  padding: 8px;
  margin-right: 10px;
  min-width: 20px;
  min-height: 20px;
  font-weight: var(--font-weight-bold);
  font-size: 16px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);
  border: 1px solid var(--code-border-color);
}

.shortcut-description {
  color: var(--color-text-subtle);
}

.shortcut-description strong {
  color: var(--color-text);
  font-weight: var(--font-weight-bold);
}

.shortcut-description code,
p.shortcut-description code {
  background-color: var(--code-bg-color);
  color: var(--code-text-color);
  padding: 3px 6px;
  border-radius: 4px;
  font-family: monospace;
  font-size: 0.9em;
  border: 1px solid var(--code-border-color);
  display: inline-block;
  margin: 2px 1px;
  line-height: 1.2;
}

.customize-experience-title,
.customize-experience-icon {
  font-size: 48px;
}

.customize-experience-icon {
  padding-right: 20px;
}

.customize-experience-title {
  margin-top: 70px;
  margin-bottom: 10px;
}

.help-divider {
  height: 1px;
  background-color: rgba(255, 255, 255, 0.05);
  margin: 30px 0;
}

/* New feature callout */
.feature-callout {
  display: flex;
  background-color: var(--help-card-bg-color);
  border-radius: 10px;
  padding: 15px;
  margin-bottom: 25px;
  align-items: center;
  border: 1px solid rgba(255, 255, 255, 0.03);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.callout-icon {
  margin-right: 16px;
  font-size: 2em;
  color: var(--color-text);

  padding: 0 20px;
  margin-right: 15px;
}

.callout-content {
  flex: 1;
}

.callout-content h4 {
  margin-top: 0;
  margin-bottom: 8px;
  padding-left: 0;
}

.callout-content h4::before {
  display: none;
}

.callout-content p {
  margin-bottom: 0;
}

.fa-bolt {
  margin-right: 20px;
}

/**
 * SCROLL BUTTON
 * 
 * A modern floating button with glassmorphism effect that toggles between 
 * scrolling content to the bottom or top.
 */
.scroll-bottom-button {
  position: fixed;
  bottom: 75px;
  left: 50%;
  transform: translateX(-50%);
  width: 36px;
  height: 36px;
  background-color: var(--color-background);
  color: var(--color-text-subtle);
  border: 1px solid var(--confirm-border-color);
  border-radius: 18px;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.scroll-bottom-button i {
  font-size: 16px;
  transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1), color 0.3s ease;
}

.scroll-bottom-button:hover {
  background-color: var(--hover-color);
  transform: translateX(-50%) translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12);
}

.scroll-bottom-button:hover i {
  color: var(--color-text);
}

/* Animation for active state */
.scroll-bottom-button:active {
  transform: translateX(-50%) translateY(0px);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

/* Style for when button becomes scroll-to-top */
.scroll-top-mode i {
  transform: rotate(180deg);
}

/* Add a subtle pulse animation when the modal first opens */
@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(var(--color-text-rgb), 0.2);
  }
  70% {
    box-shadow: 0 0 0 8px rgba(var(--color-text-rgb), 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(var(--color-text-rgb), 0);
  }
}

.scroll-bottom-button.animate-pulse {
  animation: pulse 2s ease-out 1;
}
