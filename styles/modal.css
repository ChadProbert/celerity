/**
 * Modal CSS
 * 
 * This file contains all styles related to modals and dialogs in the application.
 * It defines the overlay, containers, content areas, buttons, and interactive
 * elements used in the settings modal, help modal, and confirmation dialogs.
 */

/**
 * MODAL OVERLAY
 * 
 * The semi-transparent background that appears behind modals.
 * Covers the entire viewport and helps focus attention on the modal content.
 */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0);
  z-index: 1000;
  display: none;
}

/**
 * ACTIVE MODAL OVERLAY
 * 
 * When a modal is open, the overlay becomes visible with a subtle
 * transparency to slightly dim the content underneath.
 */
.modal-overlay.active {
  display: block;
}

/**
 * MODAL DIALOG CONTAINER
 * 
 * Fixed-position container that centers the modal content in the viewport.
 * Uses flexbox for perfect centering both horizontally and vertically.
 */
.custom-modal {
  display: none; /* Hidden by default */
  position: fixed;
  z-index: 1001;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: var(--modal-background-color);
  justify-content: center; /* Center content horizontally */
  align-items: center; /* Center content vertically */
}

/**
 * MODAL CONTENT
 * 
 * The visible container that holds the modal's content.
 * Has a distinctive background, border, and padding to separate it from the overlay.
 */
.modal-content {
  background-color: var(--color-background);
  color: var(--color-text);
  border-radius: var(--border-radius);
  max-width: 80%;
  width: 70%;
  min-width: 600px; /* Set minimum width for desktop displays */
  position: relative;
  text-align: center;
  border: 1px solid var(--confirm-border-color);
  padding: 20px;
}

/* Update the close button styles to be specific to the feedback modal */
.close-button {
  display: none; /* Hide by default */
}

/* Show and style close button only in feedback modal */
.feedback-modal .close-button {
  display: flex;
  position: absolute;
  top: 15px;
  right: 15px;
  width: 35px;
  height: 35px;
  background-color: transparent;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
}

.feedback-modal .close-button i {
  font-size: 17px;
  color: var(--color-text-subtle);
  transition: color 0.3s ease;
}

.feedback-modal .close-button:hover {
  background-color: var(--hover-color);
}

.feedback-modal .close-button:hover i {
  color: var(--color-text);
}

.shortcut-section,
.theme-label {
  margin-top: 30px;
  text-align: center;
}

.shortcut-section {
  margin-top: 10px;
  margin-bottom: 40px;
}

.theme-label {
  margin-top: 50px;
  margin-bottom: 10px;
}

.options-label {
  /* Center the label and icon */
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 50px;
  margin-bottom: 30px;
}

/* Font size for headings inside settings modal */
.shortcut-section,
.theme-label,
.options-label {
  font-size: 36px;
}

.fa-keyboard {
  margin-right: 24px;
}

.fa-globe-americas,
.fa-fill-drip {
  margin-right: 16px;
}

/**
 * RESET BUTTON
 * 
 * Button to reset settings to default.
 * Features a warning hover state to indicate destructive action.
 */
.reset-button {
  background-color: var(--accent-color);
  color: var(--color-text);
  border: 1px solid var(--confirm-border-color);
  padding: 10px 15px;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.2s ease, transform 0.2s ease;
  font-size: 15px;
  min-width: 170px;
  font-family: var(--font-family);
  margin-top: 30px;
}

.reset-button:hover {
  transform: translateY(-2px);
}

/* Icon inside reset button */
.reset-button i {
  font-size: 14px;
  margin-right: 4px;
}

/* Styling for the reset section between theme and shortcuts */
.reset-section {
  display: flex;
  justify-content: center;
  margin-top: 25px;
  margin-bottom: 25px;
}

/**
 * FORM LABELS
 * 
 * Labels for form elements within modals.
 * Uses bold text for better visual hierarchy.
 */
label {
  display: block;
  margin-bottom: 5px;
  font-weight: bold;
  color: var(--color-text);
}

/**
 * CUSTOM SELECT DROPDOWN
 * 
 * Styled select dropdown for theme selection and other options.
 * Includes custom styling for the dropdown arrow and hover/focus states.
 */

/* Theme section styling */
.theme-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  text-align: center;
}

/* Container for theme selection with accent color background */
.theme-container {
  background-color: var(--accent-color);
  border: 1px solid var(--confirm-border-color);
  border-radius: 8px;
  padding: 50px 25px;
  margin: 20px auto 10px;
  width: 100%;
  max-width: 45%;
}

.theme-section label {
  align-self: center;
}

/* Container for the custom select to position the arrow */
.custom-select-wrapper {
  position: relative;
  display: block;
  width: 85%; /* Controls the width of the theme dropdown */
  margin: 0 auto;
}

.feedback-type-container {
  position: relative;
  display: block;
  width: 100%; /* Controls the width of the theme dropdown */
}

.custom-select {
  width: 100%;
  padding: 10px 35px 10px 12px;
  background-color: var(--input-color);
  color: var(--color-text);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  position: relative;
  transition: all 0.2s ease;
  cursor: pointer;
  text-align: left;
  font-size: 14px;
}

.custom-select:focus {
  border-color: var(--color-text);
  box-shadow: 0 0 0 1px var(--color-text);
  outline: none;
}

.custom-select:hover {
  background-color: var(--hover-color);
}

.custom-arrow {
  position: absolute;
  font-size: 12px;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
  color: var(--color-text-subtle);
  transition: color 0.2s ease;
}

.custom-select:focus + .custom-arrow,
.custom-select:hover + .custom-arrow {
  color: var(--color-text);
}

/* Form Elements */
.key-input,
.name-input,
.value-input {
  padding: 8px;
  background-color: var(--input-color);
  color: var(--color-text);
  border: 1px solid var(--border-color);
  border-radius: 4px;
  transition: all 0.2s ease;
}

/* Focus styles for input fields */
.key-input:focus,
.name-input:focus,
.value-input:focus {
  border-color: var(--color-text);
  box-shadow: 0 0 0 1px var(--color-text);
  outline: none;
}

/* Special focus styles for the new shortcut input fields */
.shortcut-item:last-child .key-input:focus,
.shortcut-item:last-child .name-input:focus,
.shortcut-item:last-child .value-input:focus {
  border-color: var(--color-text);
  box-shadow: 0 0 0 1px var(--color-text);
}

.key-input {
  width: 5%;
}

.name-input {
  width: 14%;
}

.value-input {
  flex: 1;
}

/* Plus button styles */
.add-button {
  background-color: var(--accent-color);
  color: var(--color-text);
  border: none;
  padding: 8px;
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 30px;
  height: 30px;
}

.add-button:hover {
  background-color: var(--hover-color);
}

.fa-plus {
  font-size: 15px;
  color: var(--plus-icon-color);
  transition: color 0.3s ease;
}

.add-button:hover .fa-plus {
  color: var(--color-text);
}

/* Shortcut List */
.shortcut-list {
  background-color: transparent;
  border: none;
  padding-right: 10px;
  width: 100%;
}

.shortcut-item {
  display: flex;
  gap: 10px;
  align-items: center;
  margin-bottom: 5px;
}

.shortcut-item .key-input {
  width: 5%;
}

.shortcut-item .value-input {
  width: 5%;
}

/**
 * SCROLLABLE MODAL
 * 
 * When a modal has a lot of content, it becomes scrollable while
 * maintaining a reasonable maximum height. This ensures the modal
 * doesn't exceed the viewport height when resizing the window.
 * 
 * The scrollbar is hidden for a cleaner interface.
 */
.modal-content.scrollable {
  max-height: 80vh;
  min-height: 400px; /* Minimum height for desktop */
  overflow-y: auto;
  scrollbar-width: none; /* Hide scrollbar */
  padding-right: 20px; /* Padding to prevent content from touching the edge */
  scroll-behavior: smooth; /* Smooth scrolling */
}

/* Hide scrollbar in WebKit browsers (Chrome, Safari, Edge) */
.modal-content.scrollable::-webkit-scrollbar {
  display: none;
}

/* Apply the same styles to help modal content when scrollable */
.help-modal-content.scrollable {
  max-height: 85vh;
  overflow-y: auto;
  scrollbar-width: none;
  scroll-behavior: smooth;
}

.help-modal-content.scrollable::-webkit-scrollbar {
  display: none;
}

/**
 * CONFIRMATION MODAL
 * 
 * A smaller, focused modal for confirming user actions like deletion or reset.
 * Features a simple layout with a message and two buttons (cancel/confirm).
 */
.confirm-modal {
  display: none; /* Hidden by default */
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--modal-background-color);
  justify-content: center;
  align-items: center;
  z-index: 2000;
}

.confirm-modal-content {
  background: var(--color-background);
  padding: 25px 25px;
  border-radius: 8px;
  border: 1px solid var(--confirm-border-color);
  text-align: center;
  max-width: 380px;
  min-width: 300px; /* Set minimum width for desktop */
  width: 90%;
  transition: border-color 0.3s ease, background 0.3s ease;
}

.confirm-message {
  font-size: 15px;
  margin-bottom: 25px;
  color: var(--color-text);
}

.confirm-buttons {
  display: flex;
  justify-content: center;
  gap: 15px;
}

.confirm-buttons button {
  padding: 10px 15px;
  border-radius: 4px;
  font-size: 15px;
  cursor: pointer;
  font-family: var(--font-family);
  transition: background-color 0.2s ease, transform 0.2s ease;
  min-width: 100px;
}

.confirm-cancel {
  background-color: var(--input-color);
  color: var(--color-text-subtle);
  min-width: 100px;
  border: none;
}

.confirm-cancel:hover {
  background-color: var(--hover-color);
  color: var(--color-text);
  transform: translateY(-2px);
}

.confirm-ok {
  background-color: var(--accent-color);
  color: var(--color-text);
  border: 1px solid var(--confirm-border-color);
}

.confirm-ok:hover {
  transform: translateY(-2px);
}

/* Warning state for confirm button */
.confirm-ok.confirm-warning {
  background-color: #ff3b30;
  color: white;
  border: 1px solid #ff3b30;
}

.confirm-ok.confirm-warning:hover {
  transform: translateY(-2px);
}

/* Override state for confirm button */
.confirm-ok.confirm-override {
  background-color: #ff9800; /* Sunset yellow/orange */
  color: #333;
  border: 1px solid #e68900;
}

.confirm-ok.confirm-override:hover {
  transform: translateY(-2px);
}

/* URL validation error state for confirm button */
.confirm-ok.confirm-url-validation {
  background-color: #2196f3; /* Material blue */
  color: white;
  border: 1px solid #0c87e8;
}

.confirm-ok.confirm-url-validation:hover {
  transform: translateY(-2px);
}

/* Action buttons for shortcuts */
.edit-button,
.delete-button,
.save-button {
  width: 30px;
  height: 30px;
  border: none;
  border-radius: 4px;
  background-color: var(--accent-color);
  color: var(--color-text-subtle);
  cursor: pointer;
  margin-left: 5px;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: all 0.2s ease;
}

.edit-button:hover,
.delete-button:hover {
  background-color: var(--hover-color);
  color: var(--color-text);
}

.save-button {
  background-color: var(--green-color);
  color: white;
}

/* Input style toggle for editing */
.shortcut-item input[readonly] {
  background-color: transparent;
  border-color: transparent;
  cursor: default;
}

.shortcut-item input:not([readonly]) {
  background-color: var(--input-color);
  border-color: var(--border-color);
}

/* Help Modal */
.help-modal {
  display: none;
  position: fixed;
  z-index: 1001;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: var(--modal-background-color);
  justify-content: center;
  align-items: center;
}

/**
 * HELP MODAL CONTENT
 * 
 * Special styling for the help documentation inside the modal.
 */
.help-modal-content {
  background: var(--color-background);
  padding: 40px;
  border-radius: var(--border-radius);
  border: 1px solid var(--confirm-border-color);
  text-align: left;
  max-width: 70%; /* Reduced from original width */
  width: 70%;
  min-width: 500px;
  max-height: 85vh; /* Increased from 80vh to 85vh */
  min-height: 500px; /* Added minimum height */
  overflow-y: auto; /* Add scrolling for overflow content */
  transition: border-color 0.3s ease, background 0.3s ease;
  box-sizing: border-box;
  position: relative;
}

.help-modal-content h2 {
  font-size: 28px;
  margin-top: 0;
  margin-bottom: 30px;
  color: var(--color-text);
  font-weight: var(--font-weight-bold);
  position: relative;
  padding-bottom: 12px;
}

.help-modal-content h2::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  height: 3px;
  width: 60px;
  background-color: var(--color-text-subtle);
}

.help-section h3 {
  display: flex;
  align-items: center;
  margin-top: 32px;
  margin-bottom: 18px;
  color: var(--color-text);
  font-weight: var(--font-weight-bold);
  font-size: 1.3em;
}

.help-section h4 {
  margin-top: 22px;
  margin-bottom: 12px;
  color: var(--color-text);
  font-weight: var(--font-weight-normal);
  font-size: 1.15em;
  position: relative;
  padding-left: 16px;
}

.help-section h4::before {
  content: "";
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  height: 12px;
  width: 3px;
  background-color: var(--color-text-subtle);
  border-radius: 3px;
}

.help-section p {
  margin-bottom: 15px;
  line-height: 1.6;
  color: var(--color-text-subtle);
}

.help-section ul,
.help-section ol {
  margin-bottom: 20px;
  line-height: 1.6;
  padding-left: 20px;
  color: var(--color-text-subtle);
}

.help-section li {
  margin-bottom: 10px;
  position: relative;
}

.help-section li strong {
  color: var(--color-text);
}

.help-section a {
  color: var(--color-text);
  text-decoration: none;
  position: relative;
  transition: all 0.2s ease;
  border-bottom: 1px dotted var(--color-text-subtle);
}

.help-section a:hover {
  border-bottom: 1px solid var(--color-text);
}

.help-section code {
  background-color: var(--code-bg-color);
  padding: 3px 6px;
  border-radius: 4px;
  font-family: monospace;
  font-size: 0.9em;
  color: var(--code-text-color);
  border: 1px solid var(--code-border-color);
  display: inline-block;
  margin: 2px 0;
}

.help-section strong {
  color: var(--color-text);
  font-weight: var(--font-weight-bold);
}

.help-section .feature-box {
  background-color: rgba(255, 0, 0, 0.03);
  border-radius: 8px;
  padding: 20px;
  margin-bottom: 20px;
  border-left: 3px solid var(--color-text-subtle);
  box-shadow: none;
}

.feature-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  margin-right: 12px;
  color: var(--color-text);
  background-color: rgba(255, 255, 255, 0.05);
  border-radius: 50%;
  font-size: 0.8em;
}

.help-card {
  background-color: var(--help-card-bg-color);
  border-radius: 8px;
  padding: 18px;
  margin-bottom: 20px;
  transition: all 0.3s ease;
  border: 1px solid rgba(255, 255, 255, 0.03);
}

/* Add extra margin to the keyboard shortcuts section card */
.help-card {
  margin-bottom: 45px;
}

.help-card:hover {
  background-color: var(--hover-color);
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.help-card h4 {
  margin-top: 0;
  padding-left: 0;
}

.help-card h4::before {
  display: none;
}

.help-card p:last-child {
  margin-bottom: 0;
}

.shortcut-example {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

.shortcut-key {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background-color: var(--code-bg-color);
  color: var(--code-text-color);
  border-radius: 6px;
  padding: 8px;
  margin-right: 10px;
  min-width: 20px;
  min-height: 20px;
  font-weight: var(--font-weight-bold);
  font-size: 16px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.15);
  border: 1px solid var(--code-border-color);
}

.shortcut-description {
  color: var(--color-text-subtle);
}

.shortcut-description strong {
  color: var(--color-text);
  font-weight: var(--font-weight-bold);
}

.shortcut-description code,
p.shortcut-description code {
  background-color: var(--code-bg-color);
  color: var(--code-text-color);
  padding: 3px 6px;
  border-radius: 4px;
  font-family: monospace;
  font-size: 0.9em;
  border: 1px solid var(--code-border-color);
  display: inline-block;
  margin: 2px 1px;
  line-height: 1.2;
}

.help-divider {
  height: 1px;
  background-color: rgba(255, 255, 255, 0.05);
  margin: 30px 0;
}

/* New feature callout */
.feature-callout {
  display: flex;
  background-color: var(--help-card-bg-color);
  border-radius: 10px;
  padding: 15px;
  margin-bottom: 25px;
  align-items: center;
  border: 1px solid rgba(255, 255, 255, 0.03);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

.callout-icon {
  margin-right: 16px;
  font-size: 2em;
  color: var(--color-text);
  padding: 0 20px;
}

.callout-icon h3 {
  display: flex;
  align-items: center;
}

.callout-icon h3 i {
  margin-right: 20px;
}

.callout-content {
  flex: 1;
}

.callout-content h4 {
  margin-top: 0;
  margin-bottom: 8px;
  padding-left: 0;
}

.callout-content h4::before {
  display: none;
}

.callout-content p {
  margin-bottom: 0;
}

/**
 * SCROLL BUTTONS CONTAINER
 * 
 * A modern pill-shaped container with two buttons for scrolling content.
 * Features a sleek design with a subtle divider and hover effects.
 */
.scroll-buttons-container {
  position: fixed;
  top: 50%;
  right: calc(0.5%);
  transform: translateY(-50%);
  background-color: var(--color-background);
  border: 1px solid var(--confirm-border-color);
  border-radius: 8px;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 4px;
  gap: 4px;
  z-index: 1002;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Style the close button to match other scroll buttons */
.scroll-button {
  width: 35px;
  height: 35px;
  /* background-color: var(--accent-color); */
  /* border: 1px solid var(--confirm-border-color); */
  border-radius: 4px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  margin: 4px;
  transition: background-color 0.2s ease, transform 0.2s ease;
  font-family: var(--font-family);
}

.scroll-button:hover {
  background-color: var(--hover-color);
}

.scroll-button i {
  font-size: 15px;
  color: var(--color-text);
  transition: color 0.2s ease;
}

/* Add a special hover effect for the close button */
.scroll-button#closeModal:hover,
.scroll-button#closeHelpModal:hover {
  background-color: var(--hover-color);
  transform: translateY(-2px);
}

.scroll-button#closeModal:hover i,
.scroll-button#closeHelpModal:hover i {
  color: var(--color-text);
}

.scroll-button-divider {
  width: 20px;
  height: 1px;
  background-color: var(--confirm-border-color);
  opacity: 0.5;
  transition: opacity 0.3s ease;
}

.scroll-buttons-container:hover .scroll-button-divider {
  opacity: 0.8;
}

/* Add a subtle pulse animation when the modal first opens */
@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(var(--color-text-rgb), 0.2);
  }
  70% {
    box-shadow: 0 0 0 8px rgba(var(--color-text-rgb), 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(var(--color-text-rgb), 0);
  }
}

.scroll-buttons-container.animate-pulse {
  animation: pulse 2s ease-out 1;
}

/* Adjust tooltip position for the scroll buttons */
.scroll-button.tooltip-left::after {
  right: calc(100% + 8px);
}

.radio-option {
  display: flex;
  align-items: center;
  position: relative;
  cursor: pointer;
}

.radio-option input[type="radio"] {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.radio-label {
  padding-left: 28px;
  font-size: 13px;
  color: var(--color-text);
  cursor: pointer;
  font-weight: 500;
}

.radio-checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 16px;
  width: 16px;
  background-color: var(--input-color);
  border: 1px solid var(--border-color);
  border-radius: 50%;
}

.radio-checkmark:after {
  content: "";
  position: absolute;
  display: none;
  top: 50%;
  left: 50%;
  width: 8px;
  height: 8px;
  background: var(--green-color);
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(0);
  transition: all 0.25s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.radio-option input:checked ~ .radio-checkmark:after {
  display: block;
  transform: translate(-50%, -50%) scale(1);
  animation: radioPopIn 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* Radio button styling for all themes */
.radio-option input:checked ~ .radio-checkmark {
  background-color: transparent;
  border-color: var(--green-color);
}

/* Light theme specific version */
[data-theme="light"] .radio-option input:checked ~ .radio-checkmark {
  border-color: var(--green-color);
}

/* Dark theme hover state */
.radio-option:hover .radio-checkmark {
  border-color: var(--green-color);
}

.option-group:last-child {
  margin-bottom: 0;
}

.option-group label {
  font-weight: 700;
  font-size: 15px;
  margin-bottom: 8px;
  display: block;
  color: var(--color-text);
}

.search-preferences-title {
  margin-top: 40px;
}

@keyframes radioPopIn {
  0% {
    transform: translate(-50%, -50%) scale(0);
    opacity: 0;
  }
  50% {
    transform: translate(-50%, -50%) scale(1.2);
    opacity: 0.8;
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
  }
}

.options-section h4 {
  font-size: 16px;
  color: var(--color-text);
  text-align: center;
}

.options-section {
  text-align: center;
  margin-top: 100px;
  margin-bottom: 40px;
}

/* Container for options with accent color background */
.options-container {
  background-color: var(--accent-color);
  border: 1px solid var(--confirm-border-color);
  border-radius: 8px;
  padding: 30px 25px;
  margin: 20px auto 30px;
  width: 100%;
  max-width: 45%;
}

/* Add styles for vertical layout of option groups */
.options-row {
  display: flex;
  flex-direction: column;
  gap: 30px;
  width: 100%;
  align-items: center;
}

/* Radio option container styling */
.radio-option-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px;
  width: 100%;
}

.radio-option-container label {
  margin-bottom: 5;
  font-weight: 600;
  font-size: 15px;
  color: var(--color-text);
  letter-spacing: 0.3px;
}

.radio-option-container .radio-group {
  margin-top: 0;
  display: flex;
  justify-content: center;
  gap: 30px;
}

/* Column layout for the option groups */
.options-grid {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
  width: 100%;
}

.option-group {
  min-width: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 45%;
}

/* Radio button styling */
.radio-label {
  padding-left: 28px;
  font-size: 14px;
  color: var(--color-text);
  cursor: pointer;
  font-weight: 500;
}

/* Container for keyboard shortcuts with accent color background */
.shortcuts-container {
  background-color: var(--accent-color);
  border: 1px solid var(--confirm-border-color);
  border-radius: 8px;
  padding: 30px 25px;
  margin: 20px auto 30px;
  width: 100%;
  max-width: 92%;
}

/* Feedback Modal */
.feedback-modal {
  display: none; /* Hidden by default */
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--modal-background-color);
  justify-content: center;
  align-items: center;
  z-index: 2000;
}

.feedback-modal-content {
  background: var(--color-background);
  padding: 40px;
  border-radius: 10px;
  border: 1px solid var(--confirm-border-color);
  max-width: 600px;
  width: 90%;
  max-height: 90vh;
  overflow-y: auto;
  scrollbar-width: none;
  position: relative;
}

.feedback-modal-content h2 {
  margin-top: 0;
  margin-bottom: 30px;
  color: var(--color-text);
  font-size: 2.2rem;
  display: flex;
  align-items: center;
  gap: 15px; /* Space between icon and text */
}

.feedback-field {
  display: flex;
  flex-direction: column;
  gap: 8px;
  margin-bottom: 24px;
}

.feedback-field textarea {
  resize: vertical;
  min-height: 120px;
}

.feedback-field label {
  color: var(--color-text);
  font-weight: var(--font-weight-normal);
  font-size: 0.9rem;
}

.feedback-select,
.feedback-field input,
.feedback-field textarea {
  padding: 10px 12px;
  border-radius: 4px;
  border: 1px solid var(--border-color);
  background-color: var(--input-color);
  color: var(--color-text);
  font-family: var(--font-family);
  font-size: 0.95rem;
  transition: border-color 0.2s ease, background-color 0.2s ease;
}

.feedback-select:focus,
.feedback-field input:focus,
.feedback-field textarea:focus {
  border-color: var(--color-text);
  outline: 2px solid var(--color-text);
}

.feedback-select:hover,
.feedback-field input:hover,
.feedback-field textarea:hover {
  background-color: var(--hover-color);
}

.feedback-actions {
  display: flex;
  justify-content: right;
  gap: 20px;
  margin-top: 30px;
}

.feedback-cancel,
.feedback-submit {
  padding: 10px 15px;
  border-radius: 4px;
  border: none;
  font-family: var(--font-family);
  font-size: 15px;
  cursor: pointer;
  transition: background-color 0.2s ease, transform 0.2s ease;
}

.feedback-cancel {
  background-color: var(--input-color);
  color: var(--color-text-subtle);
  min-width: 100px;
  border: none;
}

.feedback-cancel:hover {
  background-color: var(--hover-color);
  color: var(--color-text);
  transform: translateY(-2px);
}

.feedback-submit {
  background-color: var(--accent-color);
  color: var(--color-text);
  border: 1px solid var(--confirm-border-color);
  min-width: 170px;
}

.feedback-submit:hover {
  transform: translateY(-2px);
}

.feedback-status {
  margin-top: 15px;
  padding: 10px;
  border-radius: 4px;
  text-align: center;
  font-size: 0.9rem;
  display: none;
}

.feedback-status.success {
  background-color: rgba(52, 199, 89, 0.1);
  color: var(--green-color);
  border: 1px solid rgba(52, 199, 89, 0.3);
  display: block;
}

.feedback-status.error {
  background-color: rgba(255, 59, 48, 0.1);
  color: #ff3b30;
  border: 1px solid rgba(255, 59, 48, 0.3);
  display: block;
}

/* Feedback Actions Container */
.feedback-actions-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 30px;
}

/* Feedback Emotions */
.feedback-emotions {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
  flex: 1;
  margin-right: 20px;
}

.emotion-input {
  /* Hide radio buttons */
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
  margin: 0;
  padding: 0;
  visibility: hidden;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  pointer-events: none;
  overflow: hidden;
}

.emotion-label {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 40px;
  height: 40px;
  transition: all 0.2s ease;
  cursor: pointer;
  margin: 0;
  font-size: 1.5rem;
  opacity: 0.5;
  filter: grayscale(70%);
  transition: all 0.3s ease;
}

/* Hover effects */
.emotion-label:hover {
  transform: translateY(-2px);
  opacity: 1;
  filter: grayscale(0%);
}

/* Selected state */
.emotion-input:checked + .emotion-label {
  animation: emotion-select 0.3s ease;
  opacity: 1;
  filter: grayscale(0%);
  transform: scale(1.1);
}

/* Animation for selection */
@keyframes emotion-select {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1.1);
  }
}

/* Feedback Buttons */
.feedback-buttons {
  display: flex;
  gap: 20px;
}
